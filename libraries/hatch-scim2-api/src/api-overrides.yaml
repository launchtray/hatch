# This file can be used to add additional paths that use OpenAPI features that (e.g.) might not be supported by Spot
# Note that the extension is YAML, but that YAML is a superset of JSON. In the case of conflicts with the Spot spec,
# this file will override values in the Spot file, unless the build scripts in package.json are modified to change the
# ordering of CLI arguments to hatch-api.
#
# This was generated by taking the following spec:
# - https://raw.githubusercontent.com/wso2-extensions/identity-client-scim2/v1.0.0/swagger-definitions/scim2.yaml
# and converting it to OpenAPI3 via https://editor.swagger.io/
openapi: 3.0.1
info:
  title: SCIM 2.0 APIs Documentation
  description: SCIM 2.0 APIs Documentation
  contact:
    name: WSO2 Identity Server Team
    url: http://wso2.com
    email: dev@wso2.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: 1.0.0
servers:
  - url: /
security:
  - basicAuth: []
paths:
  /scim/v2/Users:
    get:
      tags:
        - scimv2Users
      summary: Return users according to the filter, sort and pagination parameters
      description: Returns HTTP 404 if the users are not found.
      operationId: getUser
      parameters:
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: filter
          in: query
          description: Filter expression for filtering
          schema:
            type: string
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
        - name: count
          in: query
          description: Specifies the desired maximum number of query results per page.
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description: |-
            Specifies the attribute whose value
            SHALL be used to order the returned responses
          schema:
            type: string
        - name: sortOder
          in: query
          description: The order in which the "sortBy" parameter is applied.
          schema:
            type: string
      responses:
        200:
          description: Valid users are found
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: Valid users are not found
          content: {}
    post:
      tags:
        - scimv2Users
      summary: Return the user which was created
      description: Returns HTTP 201 if the user is successfully created.
      operationId: createUser
      parameters:
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              type: string
        required: false
      responses:
        201:
          description: Valid user is created
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: User is not found
          content: {}
      x-codegen-request-body-name: body
  /scim/v2/Users/.search:
    post:
      tags:
        - scimv2Users
      summary: Return users according to the filter, sort and pagination parameters
      description: Returns HTTP 404 if the users are not found.
      operationId: getUsersByPost
      requestBody:
        content:
          application/scim+json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: Valid users are found
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: Valid users are not found
          content: {}
      x-codegen-request-body-name: body
  /scim/v2/Users/{id}:
    get:
      tags:
        - scimv2Users
      summary: Return the user with the given id
      description: Returns HTTP 200 if the user is found.
      operationId: getUser by id
      parameters:
        - name: id
          in: path
          description: Unique id of the resource type.
          required: true
          schema:
            type: string
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        200:
          description: Valid user is found
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: Valid user is not found
          content: {}
    put:
      tags:
        - scimv2Users
      summary: Return the updated user
      description: Returns HTTP 404 if the user is not found.
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: Unique id of the resource type.
          required: true
          schema:
            type: string
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: User is updated
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: Valid user is not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
        - scimv2Users
      summary: Delete the user with the given id
      description: Returns HTTP 204 if the user is successfully deleted.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: Unique id of the resource type.
          required: true
          schema:
            type: string
      responses:
        204:
          description: User is deleted
          content: {}
        404:
          description: Valid user is not found
          content: {}
  /scim/v2/Groups:
    get:
      tags:
        - scimv2Groups
      summary: Return groups according to the filter, sort and pagination parameters
      description: Returns HTTP 404 if the groups are not found.
      operationId: getGroup
      parameters:
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: filter
          in: query
          description: Filter expression for filtering
          schema:
            type: string
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
        - name: count
          in: query
          description: Specifies the desired maximum number of query results per page.
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description: |-
            Specifies the attribute whose value
            SHALL be used to order the returned responses
          schema:
            type: string
        - name: sortOder
          in: query
          description: The order in which the "sortBy" parameter is applied.
          schema:
            type: string
      responses:
        200:
          description: Valid groups are found
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: Valid groups are not found
          content: {}
    post:
      tags:
        - scimv2Groups
      summary: Return the group which was created
      description: Returns HTTP 201 if the group is successfully created.
      operationId: createGroup
      parameters:
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              type: string
        required: false
      responses:
        201:
          description: Valid group is created
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: Group is not found
          content: {}
      x-codegen-request-body-name: body
  /scim/v2/Groups/.search:
    post:
      tags:
        - scimv2Groups
      summary: Return groups according to the filter, sort and pagination parameters
      description: Returns HTTP 404 if the groups are not found.
      operationId: getGroupsByPost
      requestBody:
        content:
          application/scim+json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: Valid groups are found
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: Valid groups are not found
          content: {}
      x-codegen-request-body-name: body
  /scim/v2/Groups/{id}:
    get:
      tags:
        - scimv2Groups
      summary: Return the group with the given id
      description: Returns HTTP 200 if the group is found.
      operationId: getGroup by id
      parameters:
        - name: id
          in: path
          description: Unique id of the resource type.
          required: true
          schema:
            type: string
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        200:
          description: Valid group is found
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: Valid group is not found
          content: {}
    put:
      tags:
        - scimv2Groups
      summary: Return the updated group
      description: Returns HTTP 404 if the group is not found.
      operationId: updateGroup
      parameters:
        - name: id
          in: path
          description: Unique id of the resource type.
          required: true
          schema:
            type: string
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: Group is updated
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: Valid group is not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
        - scimv2Groups
      summary: Delete the group with the given id
      description: Returns HTTP 204 if the group is successfully deleted.
      operationId: deleteGroup
      parameters:
        - name: id
          in: path
          description: Unique id of the resource type.
          required: true
          schema:
            type: string
      responses:
        204:
          description: Group is deleted
          content: {}
        404:
          description: Valid group is not found
          content: {}
  /scim/v2/Me:
    get:
      tags:
        - scimv2Me
      summary: Return the authenticated user.
      description: Returns HTTP 200 if the user is found.
      operationId: getMe
      parameters:
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        200:
          description: Valid user is found
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: Valid user is not found
          content: {}
    put:
      tags:
        - scimv2Me
      summary: Return the updated user
      description: Returns HTTP 404 if the user is not found.
      operationId: updateMe
      parameters:
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: User is updated
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: Valid user is not found
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
        - scimv2Me
      summary: Return the user which was anonymously created
      description: Returns HTTP 201 if the user is successfully created.
      operationId: createMe
      parameters:
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              type: string
        required: false
      responses:
        201:
          description: Valid user is created
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: User is not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
        - scimv2Me
      summary: Delete the authenticated user.
      description: Returns HTTP 204 if the user is successfully deleted.
      operationId: deleteMe
      responses:
        204:
          description: User is deleted
          content: {}
        404:
          description: Valid user is not found
          content: {}
  /scim/v2/Bulk:
    post:
      tags:
        - scimv2Bulk
      summary: Return the bulk which was created.
      description: Returns HTTP 201 if the bulk is successfully created.
      operationId: createBulk
      parameters:
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: Valid bulk is created
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: Bulk is not found
          content: {}
      x-codegen-request-body-name: body
  /scim/v2/ResourceType:
    get:
      tags:
        - scimv2ResourceType
      summary: Return the ResourceType schema.
      description: Returns HTTP 200 if the schema is found.
      operationId: getResourceType
      responses:
        200:
          description: Schema is found
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: Schema is not found
          content: {}
  /scim/v2/ServiceProviderConfig:
    get:
      tags:
        - scimv2ServiceProviderConfig
      summary: Return the ServiceProviderConfig schema.
      description: Returns HTTP 200 if the schema is found.
      operationId: getServiceProviderConfig
      responses:
        200:
          description: Schema is found
          content:
            application/json:
              schema:
                type: string
            application/scim+json:
              schema:
                type: string
        404:
          description: Schema is not found
          content: {}
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
